---
# - name: Check if auto update is enabled
#   stat:
#     path: /etc/apt/apt.conf.d/20auto-upgrades
#   register: autoupdate

# - name: Disable auto update
#   when: autoupdate.stat.exists
#   become: true
#   become_method: sudo
#   file:
#     path: /etc/apt/apt.conf.d/20auto-upgrades
#     state: absent

# - name: Wait for any possibly running unattended upgrade to finish
#   when: autoupdate.stat.exists
#   become: true
#   become_method: sudo
#   raw: systemd-run --property="After=apt-daily.service apt-daily-upgrade.service" --wait /bin/true

# - name: Reboot host(s) after disabling auto update
#   shell: sleep 2 && /sbin/shutdown -r now "ansible reboot request"
#   async: 1
#   poll: 0
#   ignore_errors: true
#   become: true
#   become_method: sudo
#   when: autoupdate.stat.exists and inventory_hostname != "127.0.0.1" and inventory_hostname != "localhost"

# - name: Waiting for host(s) to reboot
#   local_action: "wait_for host={{inventory_hostname}} port=22 state=started delay=60"
#   become: false
#   ignore_errors: true
#   when: autoupdate.stat.exists and inventory_hostname != "127.0.0.1" and inventory_hostname != "localhost"

- name: Update cache
  become: true
  become_method: sudo
  ansible.builtin.shell: apt update
  
- name: Verify system dependencies
  ansible.builtin.apt:
    pkg:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - apache2-utils
    force_apt_get: true
    state: present

- name: Install python dependencies
  become: true
  ansible.builtin.apt:
    update_cache: yes
    state: latest
    name: python3-pip

- name: Install 'Docker SDK for Python'
  ansible.builtin.pip:
    name: docker==5.0.3

- name: What is my inventory_hostname
  debug:
    msg: "{{ inventory_hostname }}"

- name: What is my ansible_hostname
  debug:
    msg: "{{ ansible_hostname }}"